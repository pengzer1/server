필기.txt

Servlet
- 자바 진영에서 웹 어플리케이션을 지원하기 위한 기술
- 자바로 웹 사이트를 만드는 기술
- 첫번째 웹 서버 기술 ~ 현재 모든 기술의 기반
- 순수 자바 + 서블릿 규격
0 자바 프로그램 > 웹 페이지 생산 > 동적 페이지


자바로 웹사이트를 만든다??

1. 정적 페이지
	- 누가? 언제? > 항상 동일한 콘텐츠를 제공

2. 동적 페이지
	- 누가? 언제? > 다른 콘텐츠를 제공
	- 주소 동일 > 내용이 바뀐다?
	- 주문(URL 요청) > 바리스타 커피 제조 > 제공
	- 미리 준비된 상품 없음 > 주문 즉시 페이지를 생성 > 제공
	
	
	
Servlet Class
- 바리스타(알바생)
- 클라이언트(브라우저)의 요청에 따라, 동적으로 웹 페이지를 생산하는 클래스
- 서블릿 기술을 구현한 실제 클래스



Servlet Class 작성 규칙

1. 서블릿 클래스 선언
	a. javax.servlet.Servlet 인터페이스를 구현한다. > 복잡함. 고비용. 구현 자유롭다.
	a. javax.servlet.http.HttpServlet 클래스를 상속받는다. > 단순함. 저비용.
		- HttpServlet 추천!!
		
2. doGet/doPost 메소드 선언 > 예약된 이름의 메소드
	- 둘 중 하나 선언 or 둘 다 선언
	- 클라이언트(브라우저)의 요청이 들어오면 자동으로 호출되는 메소드
	- "주문하기" 메소드
	- 커피 만드는 메소드 > HTML 페이지를 만드는 메소드
	- 메소드 작성 규칙
		a. 매개변수
			1. java.servlet.http.HttpServletRequest
			2. java.servlet.http.HttpServletResponse
		b. 예외 미루기
			1. java.io.IOException
			2. java.servlet.ServletException
			
3. 동적 HTML 페이지 작성 구현
	- doGet/doPost 메소드의 구현부 > HTML 페이지를 만들기 위한 자바 코드 작성
	- HttpServletResponse 객체의 getWriter() 메소드 호출 > PrintWriter 객체 반환
	- PrintWriter 객체의 printXXX("태그") 메소드를 사용해서 HTML 페이지를 작성한다. > 동적으로 웹페이지 생산
	- 페이지 완성 > 브라우저에게 반환 > 웹 페이지 출력


WAS, 응용 프로그램 서버(Web Application Server)
- 우리는 톰캣 사용
- 아파치(웹서버), 톰캣 (응용 프로그램 서버)

1. URL - hi.do > 2. 서버에 요청 > 3. hi.do 확인 > 4. 자바 파일 > 5. 컴파일 > 6. 실행 > 7. doGet() 호출 > 8. 동적 페이지로 생성 > 9. 웹서버로 전달 > 10. 요청에 응답 > 11. 브라우저로 전송
-> 같은 페이지를 다시 가져올 때
1. URL - hi.do > 2. 서버에 요청 > 3. hi.do 확인 > 4. doGet() 호출 > 5. 동적 페이지 생성 > 6. 웹서버로 전달 > 7. 요청 응답 > 7. 브라우저로 전송

다른 사람이 실행해도 컴파일 하는 단계 생략(처음 요청만 컴파일이 필요해서 느림)



데이터 입력 > (전송) > 데이터 수신
1. 데이터 입력 + 전송 > 페이지
2. 데이터 수신 프로그램 > 결과 페이지

com.test.servlet > Ex02_Send.java	: 입력 + 전송
				 > Ex02_Receive.hava: 수신 + 처리


http://localhost:8090/servlet/receive.do?name=hong&age=20
> ? 뒤에 있는 것들 > QueryString == 파라미터들 이라고 부름

Browser > 방문 URL > History








